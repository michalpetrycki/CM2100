/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guis.employee;

import cm2100guicw.Menu;
import cm2100guicw.Side;
import guis.EmployeeFrame;
import java.awt.Dimension;
import java.awt.KeyboardFocusManager;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.KeyStroke;

/**
 *
 * @author Michal
 */
public class AddSideFrame extends javax.swing.JDialog {

    /**
     * Creates new form AddSideFrame
     */
    public AddSideFrame(java.awt.Frame parent, boolean modal, EmployeeFrame employee) {
        super(parent, modal);
        this.employee = employee;
        initComponents();
        
        addSideButton.requestFocus();
        
        focusListener = new FocusListener(){
        
            @Override
            public void focusGained(FocusEvent fe){
            
                ((JTextField) fe.getSource()).setText("");
                ((JTextField) fe.getSource()).setEditable(true);
            
            }
            
            @Override 
            public void focusLost(FocusEvent fe){}
        
        };
        
        nameTextField.addFocusListener(focusListener);
        
        addKeyListeners();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        nameLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        sauceLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        priceTextField = new javax.swing.JTextField();
        addPriceButton = new javax.swing.JButton();
        addSideButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        addSauceCheckBox = new javax.swing.JCheckBox();
        sauceTextField = new javax.swing.JTextField();
        addImageLabel = new javax.swing.JLabel();
        addImageCheckBox = new javax.swing.JCheckBox();
        browseButton = new javax.swing.JButton();
        imageFileNameLabel = new javax.swing.JLabel();
        imageLabel = new javax.swing.JLabel();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        nameLabel.setText("Name:");

        priceLabel.setText("Price:");

        sauceLabel.setText("Sauce:");

        nameTextField.setText("Enter name here...");
        nameTextField.setNextFocusableComponent(addPriceButton);

        priceTextField.setEnabled(false);
        priceTextField.setNextFocusableComponent(addSauceCheckBox);

        addPriceButton.setText("Add Price");
        addPriceButton.setNextFocusableComponent(addSauceCheckBox);
        addPriceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPriceButtonActionPerformed(evt);
            }
        });

        addSideButton.setText("Add Side");
        addSideButton.setNextFocusableComponent(closeButton);
        addSideButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSideButtonActionPerformed(evt);
            }
        });

        closeButton.setText("Close");
        closeButton.setNextFocusableComponent(nameTextField);
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        addSauceCheckBox.setText("Add");
        addSauceCheckBox.setName("addSauceCheckBox"); // NOI18N
        addSauceCheckBox.setNextFocusableComponent(sauceTextField);
        addSauceCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSauceCheckBoxActionPerformed(evt);
            }
        });

        sauceTextField.setEnabled(false);
        sauceTextField.setNextFocusableComponent(addImageCheckBox);

        addImageLabel.setText("Add Image?");

        addImageCheckBox.setText("Yes");
        addImageCheckBox.setName("addImageCheckBox"); // NOI18N
        addImageCheckBox.setNextFocusableComponent(browseButton);
        addImageCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addImageCheckBoxActionPerformed(evt);
            }
        });

        browseButton.setText("Browse");
        browseButton.setEnabled(false);
        browseButton.setNextFocusableComponent(addSideButton);
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        imageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imageFileNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addSideButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nameLabel)
                                    .addComponent(priceLabel)
                                    .addComponent(sauceLabel)
                                    .addComponent(addImageLabel))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(addImageCheckBox)
                                        .addGap(18, 18, 18)
                                        .addComponent(browseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(addSauceCheckBox)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(sauceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(nameTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(addPriceButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(priceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(imageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceLabel)
                    .addComponent(priceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addPriceButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sauceLabel)
                    .addComponent(addSauceCheckBox)
                    .addComponent(sauceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addImageLabel)
                    .addComponent(addImageCheckBox)
                    .addComponent(browseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(imageFileNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(imageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addSideButton)
                    .addComponent(closeButton))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void addSideButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSideButtonActionPerformed
        
        try{
        
            String name = nameTextField.getText();
            int price = Integer.parseInt(priceTextField.getText());
            String sauce = sauceTextField.getText();

            if(name.isEmpty() || name.equals("Enter name here..."))
                JOptionPane.showMessageDialog(this, "Name cannot be empty. Please enter the name.");
            
            else{
                
                Side side = new Side(name, price, sauce);
                
                if(sauce.isEmpty())
                    side.setSauce("no sauce");
                
                if(addImageCheckBox.isSelected()){
                
                    String fileName = imageFileNameLabel.getText();
                    fileName = fileName.substring(fileName.indexOf(":") + 2);
                    side.setImageFileName(fileName);
                
                }
                
                employee.addSide(side);

                System.out.println("New Side added.");

                this.dispose();
            
            }
            
        }
        catch(NumberFormatException ex){
        
            System.out.println(ex.toString());
            JOptionPane.showMessageDialog(this, "Price cannot be empty. Please enter the price.");
        
        }
        
    }//GEN-LAST:event_addSideButtonActionPerformed

    private void addPriceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPriceButtonActionPerformed
        
        NumberDialog dialog = new NumberDialog((JFrame) this.getParent(), true, this);
        dialog.setVisible(true);
        
    }//GEN-LAST:event_addPriceButtonActionPerformed

    private void addSauceCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSauceCheckBoxActionPerformed
        sauceTextField.setEnabled(addSauceCheckBox.isSelected());
    }//GEN-LAST:event_addSauceCheckBoxActionPerformed

    private void addImageCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addImageCheckBoxActionPerformed
        browseButton.setEnabled(((JCheckBox) evt.getSource()).isSelected());
    }//GEN-LAST:event_addImageCheckBoxActionPerformed

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed

        try{
        
            JFileChooser jfc = new JFileChooser(System.getProperty("user.dir") + "/images/");
            jfc.showSaveDialog(this);
            String imageFileName = jfc.getSelectedFile().getName();
            imageFileNameLabel.setText("Image file name: " + imageFileName);
            imageLabel.setIcon(new ImageIcon("images/sides/" + imageFileName));
            this.setMinimumSize(new Dimension(this.getWidth(), this.getHeight() + 100));
        
        }
        catch(NullPointerException ex){
            System.out.println(ex.toString());
        }
        
    }//GEN-LAST:event_browseButtonActionPerformed

    public void setPrice(int a){
        priceTextField.setText("" + a);
    }
    
    private void addKeyListeners(){
    
        this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(
            KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "EXIT");
        
        this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(
            KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "ENTER");
        
        this.getRootPane().getActionMap().put("EXIT", new AbstractAction(){
            
            @Override
            public void actionPerformed(ActionEvent ae){
            
                AddSideFrame.this.dispose();
                
            }
        });
        
        this.getRootPane().getActionMap().put("ENTER", new AbstractAction(){
        
            @Override
            public void actionPerformed(ActionEvent ae){
            
                JComponent source = (JComponent) KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();
                
                if(source instanceof JButton)
                    ((JButton) source).doClick();
                
                else if(source instanceof JTextField){
                
                    if(source.isEnabled())
                        addPriceButton.requestFocus();
                    
                    else{
                    
                        if(source.getName().equals("priceTextField"))
                            addPriceButtonActionPerformed(ae);
                        
                        else 
                            addSideButton.requestFocus();
                    
                    }
                        
                }
                
                else if(source instanceof JCheckBox){
                
                    if(source.getName().equals("addSauceCheckBox")){
                    
                        ((JCheckBox) source).setSelected(!((JCheckBox) source).isSelected());
                        sauceTextField.setEnabled(((JCheckBox) source).isSelected());
                    
                    }
                    else if(source.getName().equals("addImageCheckBox")){
                    
                        ((JCheckBox) source).setSelected(!((JCheckBox) source).isSelected());
                        browseButton.setEnabled(!browseButton.isEnabled());
                    
                    }
                    
                }
                    
                
            }
        
        });
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddSideFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddSideFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddSideFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddSideFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddSideFrame dialog = new AddSideFrame(new javax.swing.JFrame(), true, new EmployeeFrame(new JFrame(), true, new Menu("Menu")));
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private EmployeeFrame employee;
    private FocusListener focusListener;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox addImageCheckBox;
    private javax.swing.JLabel addImageLabel;
    private javax.swing.JButton addPriceButton;
    private javax.swing.JCheckBox addSauceCheckBox;
    private javax.swing.JButton addSideButton;
    private javax.swing.JButton browseButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel imageFileNameLabel;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JTextField priceTextField;
    private javax.swing.JLabel sauceLabel;
    private javax.swing.JTextField sauceTextField;
    // End of variables declaration//GEN-END:variables
}
